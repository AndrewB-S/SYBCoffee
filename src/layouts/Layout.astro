---
import { getImage } from "astro:assets";
import coffeeBean from "../assets/images/coffee-bean1.png";
const optimizedCoffeeBean = await getImage({ src: coffeeBean, format: "webp" });

interface Props {
  title: string;
}
const { title } = Astro.props;
import { navItems } from "../consts";
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Atlanta and Metro Atlanta coffee catering, making delicious espresso and brewed coffee for events. We bring the best coffee in Georgia directly to you!"
    />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/gif" href={coffeeBean.src} />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>

  {/* Includes sidebar drawer from DaisyUI */}
  <body class="bg-concrete drawer drawer-end">
    <input id="toggle-menu" type="checkbox" class="drawer-toggle" aria-label="Menu Toggle"/>
    <div class="drawer-content">
      <!-- PAGE CONTENT GOES INSIDE SLOT  -->
      <slot />
    </div>

    {/* Sidebar Nav Content */}
    <div id="drawerMenu" class="drawer-side md:hidden">
      <label id="drawer-overlay" for="toggle-menu" class="drawer-overlay" aria-hidden="true"
      />
      <ul class="menu w-80 h-full bg-royal text-lg pt-16">
        {
          navItems.map((el) => (
            <li>
              <a
                href={`#${el}`}
                class="menu-item hover:text-orangered active:text-orangered text-offwhite text-2xl"
              >
                {el}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </body>
</html>
<script>
  const overlay = document.getElementById("drawer-overlay");
  const menuButton = document.getElementById("toggle-button");
  const toggleX = () => {
    menuButton?.classList.toggle("open");
  };
  overlay?.addEventListener("click", toggleX);
  const toggleLabel = document.getElementById("toggle-menu");
  const menuItems = document.querySelectorAll("a.menu-item");
  menuItems.forEach((element) => {
    element.addEventListener("click", () => {
      toggleX();
      toggleLabel?.click();
    });
  });
</script>
