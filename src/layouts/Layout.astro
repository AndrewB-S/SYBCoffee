---
import BaseHead from "../components/BaseHead.astro";
import { getImage } from "astro:assets";
import coffeeBean from "../assets/images/coffee-bean1.png";
import ogImage from "../assets/images/coffeeImages/renaissance-style-portrait-award-winning-painting-a-white-cup-of-black-coffee-centered-in-frame-406255112-1-.png";

interface Props {
  title: string;
}
const { title } = Astro.props;
import { navItems } from "../consts";
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead
      title={title}
      ,
      description="Atlanta and Metro Atlanta coffee catering, making delicious espresso and brewed coffee for events. We bring the best coffee in Georgia directly to you!"
      image={coffeeBean.src}
      ogImage={ogImage.src}
    />
  </head>
  <body class="bg-concrete drawer drawer-end">
    <input
      id="toggle-menu"
      type="checkbox"
      class="drawer-toggle"
      aria-label="Menu Toggle"
    />
    <div class="drawer-content">
      <slot />
    </div>

    <div id="drawerMenu" class="drawer-side md:hidden">
      <label
        id="drawer-overlay"
        for="toggle-menu"
        class="drawer-overlay"
        aria-hidden="true"></label>
      <ul class="menu w-80 h-full bg-royal text-lg pt-16">
        {
          navItems.map((el) => (
            <li>
              <a
                href={`#${el}`}
                class="menu-item hover:text-orangered active:text-orangered text-offwhite text-2xl"
              >
                {el}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
    <script>
      const overlay = document.getElementById("drawer-overlay");
      const menuButton = document.getElementById("toggle-button");
      const toggleX = () => {
        menuButton?.classList.toggle("open");
      };
      overlay?.addEventListener("click", toggleX);
      const toggleLabel = document.getElementById("toggle-menu");
      const menuItems = document.querySelectorAll("a.menu-item");
      menuItems.forEach((element) => {
        element.addEventListener("click", () => {
          toggleX();
          toggleLabel?.click();
        });
      });
    </script>
  </body>
</html>
