---
import { Image, getImage } from "astro:assets";
import { getCollection } from "astro:content";
type imagesArray = { default: any };

//Imports the content for the menu, but we will be manually importing the image, as the CMS is only able to see the files in DIST, which is note the filepath during build.
const drinks = await getCollection("drinks");

//Importing the image modules
const imagesArray: imagesArray[] = [];

//Every time we import an image, we will push the CMS name to this array. When we need to find an image, we search within this array, and use the index of the found item to access the image in imagesArray.
const imagesArrayRef: string[] = [];

//Bulk import within server during build for any image found in the folder of images.
const drinkImages: any = import.meta.glob("../assets/images/coffeeImages/*");
for (const path in drinkImages) {
  //load the module
  const img = await drinkImages[path]();
  //Format the path of the found image to match what the CMS believes the image is called
  const formattedPath =
    "_astro/" + path.split("../assets/images/coffeeImages/")[1];
  //Add the module to our array
  imagesArray.push(img);
  //Add the CMS name for the image module to the array
  imagesArrayRef.push(formattedPath);
}
---

<section id="Menu" class="max-w-full bg-royal py-16 scroll-m-16 flex flex-col items-center gap-10">
  <div
  id="logo-button"
  class="relative border-4 border-orangered rounded-xl flex flex-col items-center"
>

  <h1
    class="text-offwhite drop-shadow-2xl text-4xl [@media(min-width:404px)]:text-5xl font-bold tracking-wide rounded-lg select-none p-4"
  >
    MENU
  </h1>
</div>
  <ul class="flex flex-wrap justify-center items-stretch px-2 gap-2 md:gap-6 max-w-[1920px] m-auto">
    {
      drinks.map((drink: any) => {
        const isMatchedImage = drink.data.image != undefined;
        const matchedImage =
          isMatchedImage &&
          imagesArray[imagesArrayRef.indexOf(drink.data.image)].default;

        return (
          <li class="flex flex-col rounded-lg w-full md:w-80 bg-offwhite drop-shadow-xl mb-4">
            <div class="flex flex-col justify-start text-center min-h-[12rem]">
              {/* Only generate an image component if there is an image matched or else you will get a build error. */}
              {isMatchedImage && (
                <Image
                  src={matchedImage}
                  alt=""
                  class="rounded-t-lg w-full mb-2 -mt-0.5 h-28 object-cover"
                />
              )}
              <div class="flex flex-col px-2 md:px-4 pb-4 md:pb-6">
              <h3 class="text-2xl font-bold mb-2">{drink.data.title}</h3>
              <p class="leading-snug font-serif">{drink.body}</p>
              </div>
            </div>
          </li>
        );
      })
    }
  </ul>
</section>
